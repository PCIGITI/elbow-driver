[11:24:35.573] ## // Elbow Control Simulator INITIALIZED //
[11:24:40.296] ## Connected to COM8
[11:24:44.439] >> Command: FIND_LIMITS
[11:24:44.514] << Arduino: --> Theta 1 minimum set to: 3515
[11:24:44.719] << Arduino: [Step Q1 until it is at its maximum. Send 's' to step by +50, 'l' to lock limit]
[11:24:44.823] << Arduino: Stepping...
[11:24:52.668] ## Disconnected
[11:25:00.841] ## Connected to COM8
[11:25:00.844] << Arduino: Setting up motors and limit switches...
[11:25:00.949] << Arduino: > Found motor: Q1 (ID 1)
[11:25:01.053] << Arduino: > Found motor: Q2 (ID 2)
[11:25:01.157] << Arduino: > Found motor: Q4L+ (ID 3)
[11:25:01.261] << Arduino: - Interrupt attached to pin D6 for motor Q4L+
[11:25:01.363] << Arduino: > Found motor: Q4L- (ID 4)
[11:25:01.467] << Arduino: - Interrupt attached to pin D5 for motor Q4L-
[11:25:01.570] << Arduino: > Found motor: Q4R+ (ID 7)
[11:25:01.672] << Arduino: - Interrupt attached to pin D4 for motor Q4R+
[11:25:01.776] << Arduino: > Found motor: Q3- (ID 8)
[11:25:01.880] << Arduino: - Interrupt attached to pin D7 for motor Q3-
[11:25:01.982] << Arduino: > Found motor: Q4R- (ID 5)
[11:25:02.086] << Arduino: - Interrupt attached to pin D0 for motor Q4R-
[11:25:02.190] << Arduino: > Found motor: Q3+ (ID 6)
[11:25:02.294] << Arduino: - Interrupt attached to pin D1 for motor Q3+
[11:25:02.398] << Arduino: Setup complete. Ready for commands.
[11:25:05.614] >> Command: FIND_LIMITS
[11:25:05.913] << Arduino: --- Starting Limit Finding Routine ---
[11:25:06.017] << Arduino: [Step Q1 until it is at its minimum. Send 's' to step by -50, 'l' to lock limit]
[11:25:10.486] >> Command: S
[11:25:10.548] << Arduino: Stepping...
[11:25:12.077] >> Command: S
[11:25:12.160] << Arduino: Stepping...
[11:25:13.198] >> Command: S
[11:25:13.268] << Arduino: Stepping...
[11:25:17.606] >> Command: S
[11:25:17.695] << Arduino: Stepping...
[11:25:18.550] >> Command: S
[11:25:18.599] << Arduino: Stepping...
[11:25:19.270] >> Command: S
[11:25:19.306] << Arduino: Stepping...
[11:25:20.133] >> Command: S
[11:25:20.216] << Arduino: Stepping...
[11:25:21.125] >> Command: S
[11:25:21.225] << Arduino: Stepping...
[11:25:23.293] >> Command: S
[11:25:23.340] << Arduino: Stepping...
[11:25:23.974] >> Command: S
[11:25:24.046] << Arduino: Stepping...
[11:25:24.557] >> Command: S
[11:25:24.652] << Arduino: Stepping...
[11:25:25.173] >> Command: S
[11:25:25.257] << Arduino: Stepping...
[11:25:25.718] >> Command: S
[11:25:25.764] << Arduino: Stepping...
[11:25:26.173] >> Command: S
[11:25:26.270] << Arduino: Stepping...
[11:25:26.429] >> Command: S
[11:25:26.475] << Arduino: Stepping...
[11:25:26.757] >> Command: S
[11:25:26.779] << Arduino: Stepping...
[11:25:27.773] >> Command: S
[11:25:27.885] << Arduino: Stepping...
[11:25:28.502] >> Command: S
[11:25:28.591] << Arduino: Stepping...
[11:25:29.309] >> Command: S
[11:25:29.399] << Arduino: Stepping...
[11:25:33.853] >> Command: S
[11:25:33.927] << Arduino: Stepping...
[11:25:36.381] >> Command: L
[11:25:36.444] << Arduino: --> Theta 1 minimum set to: 3510
[11:25:36.648] << Arduino: [Step Q1 until it is at its maximum. Send 's' to step by +50, 'l' to lock limit]
[11:25:39.125] >> Command: S
[11:25:39.163] << Arduino: Stepping...
[11:25:39.710] >> Command: S
[11:25:39.767] << Arduino: Stepping...
[11:25:40.373] >> Command: S
[11:25:40.474] << Arduino: Stepping...
[11:25:41.045] >> Command: S
[11:25:41.081] << Arduino: Stepping...
[11:25:41.718] >> Command: S
[11:25:41.787] << Arduino: Stepping...
[11:25:42.261] >> Command: S
[11:25:42.292] << Arduino: Stepping...
[11:25:42.886] >> Command: S
[11:25:42.998] << Arduino: Stepping...
[11:25:43.342] >> Command: S
[11:25:43.403] << Arduino: Stepping...
[11:25:43.989] >> Command: S
[11:25:44.010] << Arduino: Stepping...
[11:25:44.821] >> Command: L
[11:25:44.917] << Arduino: --> Theta 1 maximum set to: 3536
[11:25:45.120] << Arduino: [Step Q2 until it is at its minimum. Send 's' to step by -50, 'l' to lock limit]
[11:27:20.646] ## Disconnected
[11:27:36.672] ## Connected to COM8
[11:27:36.679] << Arduino: Setting up motors and limit switches...
[11:27:36.786] << Arduino: > Found motor: Q1 (ID 1)
[11:27:36.889] << Arduino: > Found motor: Q2 (ID 2)
[11:27:36.992] << Arduino: > Found motor: Q4L+ (ID 3)
[11:27:37.096] << Arduino: - Interrupt attached to pin D6 for motor Q4L+
[11:27:37.201] << Arduino: > Found motor: Q4L- (ID 4)
[11:27:37.303] << Arduino: - Interrupt attached to pin D5 for motor Q4L-
[11:27:37.407] << Arduino: > Found motor: Q4R+ (ID 7)
[11:27:37.511] << Arduino: - Interrupt attached to pin D4 for motor Q4R+
[11:27:37.615] << Arduino: > Found motor: Q3- (ID 8)
[11:27:37.719] << Arduino: - Interrupt attached to pin D7 for motor Q3-
[11:27:37.822] << Arduino: > Found motor: Q4R- (ID 5)
[11:27:37.926] << Arduino: - Interrupt attached to pin D0 for motor Q4R-
[11:27:38.030] << Arduino: > Found motor: Q3+ (ID 6)
[11:27:38.133] << Arduino: - Interrupt attached to pin D1 for motor Q3+
[11:27:38.237] << Arduino: Setup complete. Ready for commands.
[11:27:39.525] >> Command: FIND_LIMITS
[11:27:39.846] << Arduino: --- Starting Limit Finding Routine ---
[11:27:39.950] << Arduino: [Step Q1 until it is at its minimum. Send 's' to step by -100, 'l' to lock limit]
[11:27:42.789] >> Command: S
[11:27:42.866] << Arduino: Stepping...
[11:27:43.997] >> Command: S
[11:27:44.073] << Arduino: Stepping...
[11:27:44.549] >> Command: S
[11:27:44.578] << Arduino: Stepping...
[11:27:45.005] >> Command: S
[11:27:45.082] << Arduino: Stepping...
[11:27:45.421] >> Command: S
[11:27:45.488] << Arduino: Stepping...
[11:27:45.861] >> Command: S
[11:27:45.892] << Arduino: Stepping...
[11:27:46.269] >> Command: S
[11:27:46.296] << Arduino: Stepping...
[11:27:46.693] >> Command: S
[11:27:46.802] << Arduino: Stepping...
[11:27:47.125] >> Command: S
[11:27:47.205] << Arduino: Stepping...
[11:27:47.581] >> Command: S
[11:27:47.608] << Arduino: Stepping...
[11:27:47.997] >> Command: S
[11:27:48.012] << Arduino: Stepping...
[11:27:48.405] >> Command: S
[11:27:48.516] << Arduino: Stepping...
[11:27:48.829] >> Command: S
[11:27:48.920] << Arduino: Stepping...
[11:27:49.357] >> Command: S
[11:27:49.425] << Arduino: Stepping...
[11:27:49.853] >> Command: S
[11:27:49.929] << Arduino: Stepping...
[11:27:50.485] >> Command: S
[11:27:50.535] << Arduino: Stepping...
[11:27:51.445] >> Command: S
[11:27:51.542] << Arduino: Stepping...
[11:27:55.117] >> Command: S
[11:27:55.161] << Arduino: Stepping...
[11:27:56.101] >> Command: S
[11:27:56.167] << Arduino: Stepping...
[11:27:56.789] >> Command: S
[11:27:56.872] << Arduino: Stepping...
[11:27:57.477] >> Command: S
[11:27:57.578] << Arduino: Stepping...
[11:27:58.125] >> Command: S
[11:27:58.184] << Arduino: Stepping...
[11:27:58.813] >> Command: S
[11:27:58.891] << Arduino: Stepping...
[11:27:59.469] >> Command: S
[11:27:59.497] << Arduino: Stepping...
[11:28:00.581] >> Command: S
[11:28:00.602] << Arduino: Stepping...
[11:28:01.340] >> Command: S
[11:28:01.407] << Arduino: Stepping...
[11:28:02.077] >> Command: S
[11:28:02.112] << Arduino: Stepping...
[11:28:02.796] >> Command: S
[11:28:02.817] << Arduino: Stepping...
[11:28:05.733] >> Command: L
[11:28:05.837] << Arduino: --> Theta 1 minimum set to: 2784
[11:28:06.042] << Arduino: [Step Q1 until it is at its maximum. Send 's' to step by +100, 'l' to lock limit]
[11:28:08.772] >> Command: S
[11:28:08.856] << Arduino: Stepping...
[11:28:09.229] >> Command: S
[11:28:09.261] << Arduino: Stepping...
[11:28:09.653] >> Command: S
[11:28:09.666] << Arduino: Stepping...
[11:28:10.045] >> Command: S
[11:28:10.069] << Arduino: Stepping...
[11:28:10.453] >> Command: S
[11:28:10.475] << Arduino: Stepping...
[11:28:10.852] >> Command: S
[11:28:10.880] << Arduino: Stepping...
[11:28:11.237] >> Command: S
[11:28:11.284] << Arduino: Stepping...
[11:28:11.621] >> Command: S
[11:28:11.688] << Arduino: Stepping...
[11:28:12.140] >> Command: S
[11:28:12.194] << Arduino: Stepping...
[11:28:12.508] >> Command: S
[11:28:12.599] << Arduino: Stepping...
[11:28:20.388] >> Command: S
[11:28:20.429] << Arduino: Stepping...
[11:28:20.916] >> Command: S
[11:28:20.934] << Arduino: Stepping...
[11:28:21.284] >> Command: S
[11:28:21.339] << Arduino: Stepping...
[11:28:21.604] >> Command: S
[11:28:21.642] << Arduino: Stepping...
[11:28:23.261] >> Command: S
[11:28:23.352] << Arduino: Stepping...
[11:28:23.941] >> Command: S
[11:28:23.957] << Arduino: Stepping...
[11:28:24.452] >> Command: S
[11:28:24.561] << Arduino: Stepping...
[11:28:24.933] >> Command: S
[11:28:24.966] << Arduino: Stepping...
[11:28:25.445] >> Command: S
[11:28:25.470] << Arduino: Stepping...
[11:28:25.877] >> Command: S
[11:28:25.975] << Arduino: Stepping...
[11:28:26.308] >> Command: S
[11:28:26.380] << Arduino: Stepping...
[11:28:26.780] >> Command: S
[11:28:26.887] << Arduino: Stepping...
[11:28:27.124] >> Command: S
[11:28:27.191] << Arduino: Stepping...
[11:28:27.396] >> Command: S
[11:28:27.495] << Arduino: Stepping...
[11:28:27.804] >> Command: S
[11:28:27.898] << Arduino: Stepping...
[11:28:28.252] >> Command: S
[11:28:28.303] << Arduino: Stepping...
[11:28:28.797] >> Command: S
[11:28:28.808] << Arduino: Stepping...
[11:28:29.308] >> Command: S
[11:28:29.413] << Arduino: Stepping...
[11:28:30.228] >> Command: S
[11:28:30.318] << Arduino: Stepping...
[11:28:30.845] >> Command: S
[11:28:30.924] << Arduino: Stepping...
[11:28:32.413] >> Command: S
[11:28:32.434] << Arduino: Stepping...
[11:28:35.109] >> Command: L
[11:28:35.148] << Arduino: --> Theta 1 maximum set to: 3837
[11:28:35.353] << Arduino: [Step Q2 until it is at its minimum. Send 's' to step by -100, 'l' to lock limit]
[11:28:59.348] >> Command: S
[11:28:59.360] << Arduino: Stepping...
[11:28:59.765] >> Command: S
[11:28:59.864] << Arduino: Stepping...
[11:29:00.173] >> Command: S
[11:29:00.267] << Arduino: Stepping...
[11:29:00.548] >> Command: S
[11:29:00.570] << Arduino: Stepping...
[11:29:00.852] >> Command: S
[11:29:00.872] << Arduino: Stepping...
[11:29:01.116] >> Command: S
[11:29:01.176] << Arduino: Stepping...
[11:29:01.396] >> Command: S
[11:29:01.479] << Arduino: Stepping...
[11:29:01.756] >> Command: S
[11:29:01.783] << Arduino: Stepping...
[11:29:02.124] >> Command: S
[11:29:02.186] << Arduino: Stepping...
[11:29:02.500] >> Command: S
[11:29:02.589] << Arduino: Stepping...
[11:29:03.116] >> Command: S
[11:29:03.194] << Arduino: Stepping...
[11:29:05.356] >> Command: L
[11:29:05.405] << Arduino: --> Theta 2 minimum set to: 3007
[11:29:05.609] << Arduino: [Step Q2 until it is at its maximum. Send 's' to step by +50, 'l' to lock limit]
[11:29:08.180] >> Command: S
[11:29:08.220] << Arduino: Stepping...
[11:29:08.532] >> Command: S
[11:29:08.624] << Arduino: Stepping...
[11:29:08.844] >> Command: S
[11:29:08.927] << Arduino: Stepping...
[11:29:09.124] >> Command: S
[11:29:09.230] << Arduino: Stepping...
[11:29:09.420] >> Command: S
[11:29:09.434] << Arduino: Stepping...
[11:29:09.732] >> Command: S
[11:29:09.838] << Arduino: Stepping...
[11:29:10.020] >> Command: S
[11:29:10.040] << Arduino: Stepping...
[11:29:10.308] >> Command: S
[11:29:10.344] << Arduino: Stepping...
[11:29:10.588] >> Command: S
[11:29:10.646] << Arduino: Stepping...
[11:29:10.884] >> Command: S
[11:29:10.949] << Arduino: Stepping...
[11:29:11.164] >> Command: S
[11:29:11.254] << Arduino: Stepping...
[11:29:11.516] >> Command: S
[11:29:11.557] << Arduino: Stepping...
[11:29:11.868] >> Command: S
[11:29:11.960] << Arduino: Stepping...
[11:29:12.196] >> Command: S
[11:29:12.264] << Arduino: Stepping...
[11:29:12.444] >> Command: S
[11:29:12.466] << Arduino: Stepping...
[11:29:12.916] >> Command: S
[11:29:12.970] << Arduino: Stepping...
[11:29:13.308] >> Command: S
[11:29:13.373] << Arduino: Stepping...
[11:29:13.588] >> Command: S
[11:29:13.677] << Arduino: Stepping...
[11:29:13.836] >> Command: S
[11:29:13.880] << Arduino: Stepping...
[11:29:14.068] >> Command: S
[11:29:14.083] << Arduino: Stepping...
[11:29:14.276] >> Command: S
[11:29:14.385] << Arduino: Stepping...
[11:29:14.532] >> Command: S
[11:29:14.588] << Arduino: Stepping...
[11:29:14.764] >> Command: S
[11:29:14.790] << Arduino: Stepping...
[11:29:14.972] >> Command: S
[11:29:14.992] << Arduino: Stepping...
[11:29:15.196] >> Command: S
[11:29:15.296] << Arduino: Stepping...
[11:29:15.388] >> Command: S
[11:29:15.498] << Arduino: Stepping...
[11:29:15.596] >> Command: S
[11:29:15.701] << Arduino: Stepping...
[11:29:15.820] >> Command: S
[11:29:15.904] << Arduino: Stepping...
[11:29:16.284] >> Command: S
[11:29:16.307] << Arduino: Stepping...
[11:29:16.468] >> Command: S
[11:29:16.510] << Arduino: Stepping...
[11:29:16.636] >> Command: S
[11:29:16.712] << Arduino: Stepping...
[11:29:16.796] >> Command: S
[11:29:16.815] << Arduino: Stepping...
[11:29:16.948] >> Command: S
[11:29:17.021] << Arduino: Stepping...
[11:29:17.116] >> Command: S
[11:29:17.224] << Arduino: Stepping...
[11:29:17.284] >> Command: S
[11:29:17.326] << Arduino: Stepping...
[11:29:17.468] >> Command: S
[11:29:17.529] << Arduino: Stepping...
[11:29:17.612] >> Command: S
[11:29:17.632] << Arduino: Stepping...
[11:29:17.788] >> Command: S
[11:29:17.834] << Arduino: Stepping...
[11:29:17.972] >> Command: S
[11:29:18.038] << Arduino: Stepping...
[11:29:18.132] >> Command: S
[11:29:18.241] << Arduino: Stepping...
[11:29:18.316] >> Command: S
[11:29:18.343] << Arduino: Stepping...
[11:29:18.668] >> Command: S
[11:29:18.747] << Arduino: Stepping...
[11:29:18.924] >> Command: S
[11:29:18.950] << Arduino: Stepping...
[11:29:19.108] >> Command: S
[11:29:19.152] << Arduino: Stepping...
[11:29:19.348] >> Command: S
[11:29:19.454] << Arduino: Stepping...
[11:29:19.668] >> Command: S
[11:29:19.758] << Arduino: Stepping...
[11:29:19.964] >> Command: S
[11:29:20.062] << Arduino: Stepping...
[11:29:20.235] >> Command: S
[11:29:20.265] << Arduino: Stepping...
[11:29:20.540] >> Command: S
[11:29:20.570] << Arduino: Stepping...
[11:29:21.172] >> Command: S
[11:29:21.275] << Arduino: Stepping...
[11:29:23.500] >> Command: L
[11:29:23.586] << Arduino: --> Theta 2 maximum set to: 4125
[11:29:23.790] << Arduino: --- Limit Finding Complete! ---
[11:29:23.893] << Arduino: Final limits:
[11:29:23.996] << Arduino: Theta1: 2784 -> 3837
[11:29:24.098] << Arduino: Theta2: 3007 -> 4125
[11:29:35.236] >> Command: UPDATE_LIMITS [2784,3837,3007,4125]
[11:29:35.238] ## Settings saved to gui_settings.json.
[11:31:35.091] ## Coordinated Step Move: Q2 by -90 steps
[11:31:35.092] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:35.643] << Arduino: =======================================================
[11:31:35.745] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:35.848] << Arduino: Step 1: Reading current motor positions...
[11:31:35.951] << Arduino: > Success. All motors responded.
[11:31:36.053] << Arduino: Step 2: Parsing movement deltas...
[11:31:36.155] << Arduino: Step 3: Mapping deltas to motors...
[11:31:36.258] << Arduino: Step 4: Performing pre-move safety check...
[11:31:36.360] << Arduino: > Success. Path is clear.
[11:31:36.463] << Arduino: Step 5: Finalizing goal positions...
[11:31:36.566] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:36.668] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:36.772] << Arduino: =======================================================
[11:31:38.595] ## Coordinated Step Move: Q2 by -90 steps
[11:31:38.596] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:39.085] << Arduino: =======================================================
[11:31:39.188] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:39.290] << Arduino: Step 1: Reading current motor positions...
[11:31:39.393] << Arduino: > Success. All motors responded.
[11:31:39.491] ## Coordinated Step Move: Q2 by -90 steps
[11:31:39.492] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:39.496] << Arduino: Step 2: Parsing movement deltas...
[11:31:39.598] << Arduino: Step 3: Mapping deltas to motors...
[11:31:39.701] << Arduino: Step 4: Performing pre-move safety check...
[11:31:39.804] << Arduino: > Success. Path is clear.
[11:31:39.907] << Arduino: Step 5: Finalizing goal positions...
[11:31:40.010] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:40.113] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:40.216] << Arduino: =======================================================
[11:31:40.315] ## Coordinated Step Move: Q2 by -90 steps
[11:31:40.316] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:40.520] << Arduino: =======================================================
[11:31:40.623] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:40.726] << Arduino: Step 1: Reading current motor positions...
[11:31:40.828] << Arduino: > Success. All motors responded.
[11:31:40.931] << Arduino: Step 2: Parsing movement deltas...
[11:31:41.033] << Arduino: Step 3: Mapping deltas to motors...
[11:31:41.035] ## Coordinated Step Move: Q2 by -90 steps
[11:31:41.037] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:41.136] << Arduino: Step 4: Performing pre-move safety check...
[11:31:41.238] << Arduino: > Success. Path is clear.
[11:31:41.341] << Arduino: Step 5: Finalizing goal positions...
[11:31:41.443] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:41.546] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:41.648] << Arduino: =======================================================
[11:31:41.731] ## Coordinated Step Move: Q2 by -90 steps
[11:31:41.732] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:41.951] << Arduino: =======================================================
[11:31:42.055] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:42.157] << Arduino: Step 1: Reading current motor positions...
[11:31:42.260] << Arduino: > Success. All motors responded.
[11:31:42.363] << Arduino: Step 2: Parsing movement deltas...
[11:31:42.466] << Arduino: Step 3: Mapping deltas to motors...
[11:31:42.474] ## Coordinated Step Move: Q2 by -90 steps
[11:31:42.475] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:42.569] << Arduino: Step 4: Performing pre-move safety check...
[11:31:42.671] << Arduino: > Success. Path is clear.
[11:31:42.774] << Arduino: Step 5: Finalizing goal positions...
[11:31:42.876] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:42.978] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:43.081] << Arduino: =======================================================
[11:31:43.386] [11:31:43.387] ## Coordinated Step Move: Q2 by -90 steps
[11:31:43.388] >> Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
<< Arduino: =======================================================
[11:31:43.491] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:43.594] << Arduino: Step 1: Reading current motor positions...
[11:31:43.697] << Arduino: > Success. All motors responded.
[11:31:43.799] << Arduino: Step 2: Parsing movement deltas...
[11:31:43.902] << Arduino: Step 3: Mapping deltas to motors...
[11:31:44.005] << Arduino: Step 4: Performing pre-move safety check...
[11:31:44.107] << Arduino: > Success. Path is clear.
[11:31:44.209] << Arduino: Step 5: Finalizing goal positions...
[11:31:44.312] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:44.414] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:44.517] << Arduino: =======================================================
[11:31:44.821] << Arduino: =======================================================
[11:31:44.924] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:45.026] << Arduino: Step 1: Reading current motor positions...
[11:31:45.128] << Arduino: > Success. All motors responded.
[11:31:45.231] << Arduino: Step 2: Parsing movement deltas...
[11:31:45.334] << Arduino: Step 3: Mapping deltas to motors...
[11:31:45.437] << Arduino: Step 4: Performing pre-move safety check...
[11:31:45.539] << Arduino: > Success. Path is clear.
[11:31:45.641] << Arduino: Step 5: Finalizing goal positions...
[11:31:45.745] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:45.847] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:45.950] << Arduino: =======================================================
[11:31:46.255] << Arduino: =======================================================
[11:31:46.358] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:46.460] << Arduino: Step 1: Reading current motor positions...
[11:31:46.564] << Arduino: > Success. All motors responded.
[11:31:46.667] << Arduino: Step 2: Parsing movement deltas...
[11:31:46.770] << Arduino: Step 3: Mapping deltas to motors...
[11:31:46.873] << Arduino: Step 4: Performing pre-move safety check...
[11:31:46.976] << Arduino: > Success. Path is clear.
[11:31:47.079] << Arduino: Step 5: Finalizing goal positions...
[11:31:47.182] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:47.285] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:47.388] << Arduino: =======================================================
[11:31:47.692] << Arduino: =======================================================
[11:31:47.795] << Arduino: Received Command: MOVE_ALL_MOTORS:0,-90,0,0,0,0,0,0
[11:31:47.897] << Arduino: Step 1: Reading current motor positions...
[11:31:48.000] << Arduino: > Success. All motors responded.
[11:31:48.103] << Arduino: Step 2: Parsing movement deltas...
[11:31:48.206] << Arduino: Step 3: Mapping deltas to motors...
[11:31:48.243] ## Coordinated Step Move: Q1 by 90 steps
[11:31:48.244] >> Command: MOVE_ALL_MOTORS:90,0,0,0,0,0,0,0
[11:31:48.309] << Arduino: Step 4: Performing pre-move safety check...
[11:31:48.411] << Arduino: > Success. Path is clear.
[11:31:48.514] << Arduino: Step 5: Finalizing goal positions...
[11:31:48.616] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:48.719] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:48.823] << Arduino: =======================================================
[11:31:49.126] << Arduino: =======================================================
[11:31:49.229] << Arduino: Received Command: MOVE_ALL_MOTORS:90,0,0,0,0,0,0,0
[11:31:49.332] << Arduino: Step 1: Reading current motor positions...
[11:31:49.435] << Arduino: > Success. All motors responded.
[11:31:49.538] << Arduino: Step 2: Parsing movement deltas...
[11:31:49.640] << Arduino: Step 3: Mapping deltas to motors...
[11:31:49.744] << Arduino: Step 4: Performing pre-move safety check...
[11:31:49.947] << Arduino: > PRE-MOVE CHECK FAILED: Cannot move motor Q1. Goal (3935) exceeds limits [2784, 3837].
[11:31:50.051] << Arduino: > Aborting move command due to position limits.
[11:31:50.154] << Arduino: =======================================================
[11:31:52.011] ## Coordinated Step Move: Q1 by -90 steps
[11:31:52.012] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:52.464] << Arduino: =======================================================
[11:31:52.567] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:52.670] << Arduino: Step 1: Reading current motor positions...
[11:31:52.739] ## Coordinated Step Move: Q1 by -90 steps
[11:31:52.739] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:52.773] << Arduino: > Success. All motors responded.
[11:31:52.875] << Arduino: Step 2: Parsing movement deltas...
[11:31:52.977] << Arduino: Step 3: Mapping deltas to motors...
[11:31:53.081] << Arduino: Step 4: Performing pre-move safety check...
[11:31:53.183] << Arduino: > Success. Path is clear.
[11:31:53.286] << Arduino: Step 5: Finalizing goal positions...
[11:31:53.307] ## Coordinated Step Move: Q1 by -90 steps
[11:31:53.308] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:53.389] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:53.492] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:53.595] << Arduino: =======================================================
[11:31:53.899] << Arduino: =======================================================
[11:31:53.954] ## Coordinated Step Move: Q1 by -90 steps
[11:31:53.956] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:54.002] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:54.105] << Arduino: Step 1: Reading current motor positions...
[11:31:54.208] << Arduino: > Success. All motors responded.
[11:31:54.312] << Arduino: Step 2: Parsing movement deltas...
[11:31:54.414] << Arduino: Step 3: Mapping deltas to motors...
[11:31:54.515] ## Coordinated Step Move: Q1 by -90 steps
[11:31:54.515] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:54.521] << Arduino: Step 4: Performing pre-move safety check...
[11:31:54.623] << Arduino: > Success. Path is clear.
[11:31:54.725] << Arduino: Step 5: Finalizing goal positions...
[11:31:54.828] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:54.930] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:55.033] << Arduino: =======================================================
[11:31:55.123] ## Coordinated Step Move: Q1 by -90 steps
[11:31:55.124] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:55.337] << Arduino: =======================================================
[11:31:55.439] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:55.542] << Arduino: Step 1: Reading current motor positions...
[11:31:55.644] << Arduino: > Success. All motors responded.
[11:31:55.691] ## Coordinated Step Move: Q1 by -90 steps
[11:31:55.691] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:55.747] << Arduino: Step 2: Parsing movement deltas...
[11:31:55.850] << Arduino: Step 3: Mapping deltas to motors...
[11:31:55.952] << Arduino: Step 4: Performing pre-move safety check...
[11:31:56.056] << Arduino: > Success. Path is clear.
[11:31:56.158] << Arduino: Step 5: Finalizing goal positions...
[11:31:56.261] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:56.274] ## Coordinated Step Move: Q1 by -90 steps
[11:31:56.275] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:56.364] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:56.466] << Arduino: =======================================================
[11:31:56.770] << Arduino: =======================================================
[11:31:56.819] ## Coordinated Step Move: Q1 by -90 steps
[11:31:56.820] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:56.873] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:56.975] << Arduino: Step 1: Reading current motor positions...
[11:31:57.078] << Arduino: > Success. All motors responded.
[11:31:57.181] << Arduino: Step 2: Parsing movement deltas...
[11:31:57.284] << Arduino: Step 3: Mapping deltas to motors...
[11:31:57.387] << Arduino: Step 4: Performing pre-move safety check...
[11:31:57.411] ## Coordinated Step Move: Q1 by -90 steps
[11:31:57.412] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:57.493] << Arduino: > Success. Path is clear.
[11:31:57.595] << Arduino: Step 5: Finalizing goal positions...
[11:31:57.698] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:57.800] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:57.903] << Arduino: =======================================================
[11:31:58.003] ## Coordinated Step Move: Q1 by -90 steps
[11:31:58.004] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:58.207] << Arduino: =======================================================
[11:31:58.310] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:58.413] << Arduino: Step 1: Reading current motor positions...
[11:31:58.516] << Arduino: > Success. All motors responded.
[11:31:58.619] << Arduino: Step 2: Parsing movement deltas...
[11:31:58.721] << Arduino: Step 3: Mapping deltas to motors...
[11:31:58.824] << Arduino: Step 4: Performing pre-move safety check...
[11:31:58.843] ## Coordinated Step Move: Q1 by -90 steps
[11:31:58.844] >> Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:58.927] << Arduino: > Success. Path is clear.
[11:31:59.030] << Arduino: Step 5: Finalizing goal positions...
[11:31:59.133] << Arduino: Step 6: Executing move with SyncWrite...
[11:31:59.235] << Arduino: > [SyncWrite] Success. Command sent.
[11:31:59.338] << Arduino: =======================================================
[11:31:59.641] << Arduino: =======================================================
[11:31:59.744] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:31:59.847] << Arduino: Step 1: Reading current motor positions...
[11:31:59.949] << Arduino: > Success. All motors responded.
[11:32:00.052] << Arduino: Step 2: Parsing movement deltas...
[11:32:00.155] << Arduino: Step 3: Mapping deltas to motors...
[11:32:00.257] << Arduino: Step 4: Performing pre-move safety check...
[11:32:00.360] << Arduino: > Success. Path is clear.
[11:32:00.463] << Arduino: Step 5: Finalizing goal positions...
[11:32:00.566] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:00.668] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:00.772] << Arduino: =======================================================
[11:32:01.076] << Arduino: =======================================================
[11:32:01.178] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:01.281] << Arduino: Step 1: Reading current motor positions...
[11:32:01.384] << Arduino: > Success. All motors responded.
[11:32:01.487] << Arduino: Step 2: Parsing movement deltas...
[11:32:01.590] << Arduino: Step 3: Mapping deltas to motors...
[11:32:01.693] << Arduino: Step 4: Performing pre-move safety check...
[11:32:01.796] << Arduino: > Success. Path is clear.
[11:32:01.898] << Arduino: Step 5: Finalizing goal positions...
[11:32:02.001] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:02.105] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:02.207] << Arduino: =======================================================
[11:32:02.511] << Arduino: =======================================================
[11:32:02.614] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:02.716] << Arduino: Step 1: Reading current motor positions...
[11:32:02.819] << Arduino: > Success. All motors responded.
[11:32:02.922] << Arduino: Step 2: Parsing movement deltas...
[11:32:03.025] << Arduino: Step 3: Mapping deltas to motors...
[11:32:03.127] << Arduino: Step 4: Performing pre-move safety check...
[11:32:03.229] << Arduino: > Success. Path is clear.
[11:32:03.333] << Arduino: Step 5: Finalizing goal positions...
[11:32:03.435] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:03.538] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:03.641] << Arduino: =======================================================
[11:32:03.945] << Arduino: =======================================================
[11:32:04.048] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:04.151] << Arduino: Step 1: Reading current motor positions...
[11:32:04.255] << Arduino: > Success. All motors responded.
[11:32:04.357] << Arduino: Step 2: Parsing movement deltas...
[11:32:04.459] << Arduino: Step 3: Mapping deltas to motors...
[11:32:04.561] << Arduino: Step 4: Performing pre-move safety check...
[11:32:04.664] << Arduino: > Success. Path is clear.
[11:32:04.766] << Arduino: Step 5: Finalizing goal positions...
[11:32:04.868] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:04.971] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:05.074] << Arduino: =======================================================
[11:32:05.377] << Arduino: =======================================================
[11:32:05.480] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:05.584] << Arduino: Step 1: Reading current motor positions...
[11:32:05.687] << Arduino: > Success. All motors responded.
[11:32:05.789] << Arduino: Step 2: Parsing movement deltas...
[11:32:05.892] << Arduino: Step 3: Mapping deltas to motors...
[11:32:05.995] << Arduino: Step 4: Performing pre-move safety check...
[11:32:06.097] << Arduino: > Success. Path is clear.
[11:32:06.200] << Arduino: Step 5: Finalizing goal positions...
[11:32:06.303] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:06.406] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:06.510] << Arduino: =======================================================
[11:32:06.813] << Arduino: =======================================================
[11:32:06.917] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:07.020] << Arduino: Step 1: Reading current motor positions...
[11:32:07.123] << Arduino: > Success. All motors responded.
[11:32:07.226] << Arduino: Step 2: Parsing movement deltas...
[11:32:07.328] << Arduino: Step 3: Mapping deltas to motors...
[11:32:07.431] << Arduino: Step 4: Performing pre-move safety check...
[11:32:07.533] << Arduino: > Success. Path is clear.
[11:32:07.636] << Arduino: Step 5: Finalizing goal positions...
[11:32:07.738] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:07.841] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:07.943] << Arduino: =======================================================
[11:32:08.247] << Arduino: =======================================================
[11:32:08.349] << Arduino: Received Command: MOVE_ALL_MOTORS:-90,0,0,0,0,0,0,0
[11:32:08.453] << Arduino: Step 1: Reading current motor positions...
[11:32:08.556] << Arduino: > Success. All motors responded.
[11:32:08.659] << Arduino: Step 2: Parsing movement deltas...
[11:32:08.761] << Arduino: Step 3: Mapping deltas to motors...
[11:32:08.864] << Arduino: Step 4: Performing pre-move safety check...
[11:32:08.966] << Arduino: > Success. Path is clear.
[11:32:09.068] << Arduino: Step 5: Finalizing goal positions...
[11:32:09.171] << Arduino: Step 6: Executing move with SyncWrite...
[11:32:09.274] << Arduino: > [SyncWrite] Success. Command sent.
[11:32:09.376] << Arduino: =======================================================
[11:32:14.602] << Arduino: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[11:32:14.705] << Arduino: !!! EMERGENCY STOP: Limit switch interrupt triggered!
[11:32:14.807] << Arduino: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[11:32:14.911] << Arduino: !!! ERROR: Limit switch reached for Motor Q3- (ID 8) on pin D7
[11:32:15.014] << Arduino: !!! System reset. Torque re-enabled. Ready for new command.
[11:32:15.318] << Arduino: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[11:32:15.421] << Arduino: !!! EMERGENCY STOP: Limit switch interrupt triggered!
[11:32:15.524] << Arduino: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[11:32:15.627] << Arduino: Check lower limit switches!!!! System reset. Torque re-enabled. Ready for new command.
[11:34:34.297] >> Command: TOGGLE_VERBOSE
[12:06:39.509] !! ! E-STOP DETECTED: Serial connection lost.

